name: Android Debug APK

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - "android/**"
      - "lib/**"
      - "pubspec.yaml"
      - ".github/workflows/android-debug-apk.yml"

jobs:
  build-apk:
    name: Build Debug APK
    runs-on: ubuntu-latest
    timeout-minutes: 45

    env:
      ANDROID_SDK_ROOT: ${{ runner.temp }}/android-sdk
      ANDROID_HOME: ${{ runner.temp }}/android-sdk
      JAVA_TOOL_OPTIONS: -Xmx2g -XX:MaxMetaspaceSize=512m
      _JAVA_OPTIONS: -Xmx2g
      GRADLE_OPTS: -Dorg.gradle.jvmargs="-Xmx2g -XX:MaxMetaspaceSize=512m -Dfile.encoding=UTF-8" -Dorg.gradle.daemon=false
      # Speed up Gradle resolution:
      GRADLE_USER_HOME: ${{ runner.temp }}/.gradle

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"
          cache: gradle

      - name: Install Android SDK (cmdline-tools) + accept licenses
        run: |
          set -eux
          mkdir -p "$ANDROID_SDK_ROOT/cmdline-tools"
          curl -L -o cmdline-tools.zip https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
          unzip -q cmdline-tools.zip -d "$ANDROID_SDK_ROOT/cmdline-tools"
          mv "$ANDROID_SDK_ROOT/cmdline-tools/cmdline-tools" "$ANDROID_SDK_ROOT/cmdline-tools/latest"
          yes | "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager" --licenses

      - name: Install platforms/build-tools/NDK (with retries)
        run: |
          set -eux
          install() {
            "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager" \
              "platform-tools" \
              "platforms;android-35" \
              "build-tools;35.0.0" \
              "cmake;3.22.1" \
              "ndk;27.0.12077973"
          }
          install || install || install

      - name: Cache Flutter SDK
        id: flutter-cache
        uses: actions/cache@v4
        with:
          path: ~/.flutter-sdk
          key: flutter-stable-3.32.x

      - name: Install Flutter (stable)
        if: steps.flutter-cache.outputs.cache-hit != 'true'
        run: |
          set -eux
          git clone https://github.com/flutter/flutter.git ~/.flutter-sdk
          cd ~/.flutter-sdk
          git checkout stable
          ./bin/flutter --version

      - name: Add Flutter to PATH
        run: echo "${HOME}/.flutter-sdk/bin" >> $GITHUB_PATH

      - name: Flutter doctor (sanity)
        run: flutter doctor -v

      - name: Flutter pub get (with retries)
        run: |
          set -eux
          flutter pub get || flutter pub get || flutter pub get

      - name: Verify assets exist (avoid “unable to find directory entry”)
        run: |
          set -eux
          test -f pubspec.yaml
          # If you reference specific files, ensure they exist; otherwise skip
          # Example checks:
          # test -f assets/branding/icon.png || echo "icon not found (ok if not referenced explicitly)"

      - name: Build Debug APK (retry on flaky network/gradle)
        run: |
          set -eux
          # ensure Gradle wrapper is executable
          chmod +x android/gradlew
          # set NDK version in case plugins require it
          sed -i 's|ndkVersion = .*|ndkVersion = "27.0.12077973"|' android/app/build.gradle.kts || true
          # retry build up to 2 times if needed
          ./android/gradlew -p android :app:assembleDebug --no-daemon --stacktrace \
            || ./android/gradlew -p android :app:assembleDebug --no-daemon --stacktrace

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-debug-apk
          path: android/app/build/outputs/apk/debug/*.apk
