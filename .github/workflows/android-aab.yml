name: Android Play Bundle

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - "android/**"
      - "lib/**"
      - "pubspec.yaml"
      - ".github/workflows/android-aab.yml"

jobs:
  build-aab:
    runs-on: ubuntu-latest
    timeout-minutes: 90

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"
          cache: gradle

      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          flutter-version: "3.32.8"
          cache: true

      - name: Install Android SDK (manual)
        shell: bash
        run: |
          set -euxo pipefail
          export ANDROID_SDK_ROOT="$HOME/android-sdk"
          export ANDROID_HOME="$ANDROID_SDK_ROOT"
          mkdir -p "$ANDROID_SDK_ROOT/cmdline-tools"
          cd "$ANDROID_SDK_ROOT/cmdline-tools"
          curl -L -o tools.zip https://dl.google.com/android/repository/commandlinetools-linux-12266719_latest.zip
          unzip -q tools.zip -d latest
          rm -f tools.zip

          if [[ -x "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager" ]]; then
            SDKMGR="$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager"
          else
            SDKMGR="$ANDROID_SDK_ROOT/cmdline-tools/latest/cmdline-tools/bin/sdkmanager"
          fi

          echo y | "$SDKMGR" --sdk_root="$ANDROID_SDK_ROOT" --licenses || true
          "$SDKMGR" --sdk_root="$ANDROID_SDK_ROOT" \
            "platform-tools" \
            "platforms;android-35" \
            "platforms;android-33" \
            "build-tools;34.0.0" \
            "cmake;3.22.1" \
            "ndk;27.0.12077973"

          echo "ANDROID_SDK_ROOT=$ANDROID_SDK_ROOT" >> "$GITHUB_ENV"
          echo "ANDROID_HOME=$ANDROID_SDK_ROOT" >> "$GITHUB_ENV"
          echo "$ANDROID_SDK_ROOT/platform-tools" >> "$GITHUB_PATH"
          echo "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin" >> "$GITHUB_PATH"
          echo "$ANDROID_SDK_ROOT/cmdline-tools/latest/cmdline-tools/bin" >> "$GITHUB_PATH"

      - name: Decode release keystore
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
        run: |
          set -eux
          cd android/app
          echo "$KEYSTORE_BASE64" | base64 -d > release-keystore.jks
          test -s release-keystore.jks

      - name: Write key.properties
        env:
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: |
          set -eux
          cat > android/key.properties <<'EOF'
          storeFile=app/release-keystore.jks
          storePassword=${KEYSTORE_PASSWORD}
          keyAlias=${KEY_ALIAS}
          keyPassword=${KEY_PASSWORD}
          EOF
          sed -n '1,20p' android/key.properties

      - name: Write local.properties
        run: |
          set -eux
          cat > android/local.properties <<'EOF'
          sdk.dir=${HOME}/android-sdk
          flutter.sdk=${HOME}/flutter
          EOF
          sed -n '1,20p' android/local.properties

      - name: Show env & paths
        run: |
          echo "ANDROID_SDK_ROOT=$ANDROID_SDK_ROOT"
          echo "ANDROID_HOME=$ANDROID_HOME"
          which sdkmanager || true
          which adb || true
          sdkmanager --version || true
          ls -la "$ANDROID_SDK_ROOT" || true
          ls -la "$ANDROID_SDK_ROOT/platform-tools" || true

      - name: Configure Flutter to use the Android SDK
        run: |
          set -eux
          flutter --version
          flutter config --android-sdk "$ANDROID_SDK_ROOT"
          flutter doctor -v

      - name: flutter pub get
        env:
          ANDROID_SDK_ROOT: ${{ env.ANDROID_SDK_ROOT }}
          ANDROID_HOME: ${{ env.ANDROID_SDK_ROOT }}
          PATH: ${{ env.PATH }}:${{ env.ANDROID_SDK_ROOT }}/platform-tools:${{ env.ANDROID_SDK_ROOT }}/cmdline-tools/latest/bin:${{ env.ANDROID_SDK_ROOT }}/cmdline-tools/latest/cmdline-tools/bin
        run: flutter pub get

      - name: Build AAB (release)
        env:
          ANDROID_SDK_ROOT: ${{ env.ANDROID_SDK_ROOT }}
          ANDROID_HOME: ${{ env.ANDROID_SDK_ROOT }}
          PATH: ${{ env.PATH }}:${{ env.ANDROID_SDK_ROOT }}/platform-tools:${{ env.ANDROID_SDK_ROOT }}/cmdline-tools/latest/bin:${{ env.ANDROID_SDK_ROOT }}/cmdline-tools/latest/cmdline-tools/bin
        run: |
          set -eux
          flutter build appbundle --release --no-shrink --no-tree-shake-icons

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release-aab
          path: build/app/outputs/bundle/release/app-release.aab
          if-no-files-found: error
