name: Android Play Bundle

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - "android/**"
      - "lib/**"
      - "pubspec.yaml"
      - ".github/workflows/android-aab.yml"

jobs:
  build-aab:
    name: Build AAB (release)
    runs-on: ubuntu-latest
    timeout-minutes: 120

    env:
      ANDROID_SDK_ROOT: ${{ github.workspace }}/android-sdk
      ANDROID_HOME: ${{ github.workspace }}/android-sdk
      JAVA_TOOL_OPTIONS: -Xmx2g -XX:MaxMetaspaceSize=512m
      _JAVA_OPTIONS: -Xmx2g

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"
          cache: gradle

      - name: Cache Gradle dirs
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Cache pub (Flutter packages)
        uses: actions/cache@v4
        with:
          path: ~/.pub-cache
          key: pub-${{ runner.os }}-${{ hashFiles('pubspec.lock') }}
          restore-keys: |
            pub-${{ runner.os }}-

      - name: Manual install Android SDK + accept licenses (robust)
        shell: bash
        run: |
          set -euxo pipefail
          mkdir -p "$ANDROID_SDK_ROOT/cmdline-tools"
          cd "$ANDROID_SDK_ROOT/cmdline-tools"
          curl -L -o tools.zip "https://dl.google.com/android/repository/commandlinetools-linux-12266719_latest.zip"
          unzip -q tools.zip -d latest
          rm -f tools.zip

          # sdkmanager lives here after unzip
          if [[ -x "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager" ]]; then
            SDKMGR="$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager"
          else
            SDKMGR="$ANDROID_SDK_ROOT/cmdline-tools/latest/cmdline-tools/bin/sdkmanager"
          fi
          echo "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin" >> "$GITHUB_PATH"
          echo "$ANDROID_SDK_ROOT/platform-tools" >> "$GITHUB_PATH"

          # Accept licenses non-interactively
          yes | "$SDKMGR" --sdk_root="$ANDROID_SDK_ROOT" --licenses || true

          # Install packages individually (more reliable on CI)
          "$SDKMGR" --sdk_root="$ANDROID_SDK_ROOT" "platform-tools"
          "$SDKMGR" --sdk_root="$ANDROID_SDK_ROOT" "platforms;android-34"
          "$SDKMGR" --sdk_root="$ANDROID_SDK_ROOT" "build-tools;34.0.0"
          "$SDKMGR" --sdk_root="$ANDROID_SDK_ROOT" "cmake;3.22.1"
          "$SDKMGR" --sdk_root="$ANDROID_SDK_ROOT" "ndk;27.0.12077973"

      - name: Persist ANDROID_* env + write local.properties
        shell: bash
        run: |
          set -euxo pipefail
          echo "ANDROID_SDK_ROOT=$ANDROID_SDK_ROOT" >> "$GITHUB_ENV"
          echo "ANDROID_HOME=$ANDROID_HOME" >> "$GITHUB_ENV"
          echo "ANDROID_NDK_ROOT=$ANDROID_SDK_ROOT/ndk/27.0.12077973" >> "$GITHUB_ENV"
          mkdir -p android
          {
            echo "sdk.dir=$ANDROID_SDK_ROOT"
            echo "ndk.dir=$ANDROID_SDK_ROOT/ndk/27.0.12077973"
          } > android/local.properties
          echo "local.properties:" && cat android/local.properties
          # Quick sanity checks
          which sdkmanager || true
          sdkmanager --version || true
          ls -la "$ANDROID_SDK_ROOT/ndk" || true
          ls -la "$ANDROID_SDK_ROOT/ndk/27.0.12077973/toolchains/llvm/prebuilt" || true

      - name: Flutter doctor
        run: flutter doctor -v

      - name: Build AAB (release)
        shell: bash
        env:
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: |
          set -euxo pipefail
          # No need to stop Gradle daemon explicitly; we disabled it in gradle.properties
          flutter build appbundle --release --no-shrink --no-tree-shake-icons


      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release-aab
          path: build/app/outputs/bundle/release/app-release.aab
