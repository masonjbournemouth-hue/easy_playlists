name: Android Play Bundle

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - "android/**"
      - "lib/**"
      - "pubspec.yaml"
      - ".github/workflows/android-aab.yml"

jobs:
  build-aab:
    name: Build Signed AAB
    runs-on: ubuntu-latest
    timeout-minutes: 50

    env:
      ANDROID_SDK_ROOT: ${{ github.workspace }}/android-sdk
      ANDROID_HOME: ${{ github.workspace }}/android-sdk
      JAVA_HOME_17_X64: /usr/lib/jvm/temurin-17-jdk-amd64

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"
          cache: gradle

      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.24.3"

      # Manual Android SDK bootstrap (no third-party setup-android action)
      - name: Install Android cmdline-tools
        run: |
          set -euxo pipefail
          mkdir -p "$ANDROID_SDK_ROOT"
          cd "$ANDROID_SDK_ROOT"
          curl -L -o cmdtools.zip https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip
          unzip -q cmdtools.zip
          mkdir -p "$ANDROID_SDK_ROOT/cmdline-tools/latest"
          # After unzip, folder is usually "cmdline-tools"
          mv cmdline-tools/* "$ANDROID_SDK_ROOT/cmdline-tools/latest/" || true
          rm -f cmdtools.zip

      - name: Install SDK/NDK packages
        run: |
          set -euxo pipefail
          SDKMGR="$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager"
          yes | "$SDKMGR" --sdk_root="$ANDROID_SDK_ROOT" --licenses
          yes | "$SDKMGR" --sdk_root="$ANDROID_SDK_ROOT" \
            "platform-tools" \
            "platforms;android-34" \
            "build-tools;34.0.0" \
            "cmake;3.22.1" \
            "ndk;27.0.12077973"

      - name: Flutter pub get
        run: flutter pub get

      - name: Decode keystore
        run: echo "$KEYSTORE_BASE64" | base64 -d > android/app/release-keystore.jks
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}

      - name: Build signed AAB
        run: flutter build appbundle --release
        env:
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}

      - name: Upload AAB artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release-aab
          path: build/app/outputs/bundle/release/app-release.aab
