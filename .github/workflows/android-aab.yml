name: Android Play Bundle

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - "android/**"
      - "lib/**"
      - "pubspec.yaml"
      - ".github/workflows/android-aab.yml"

jobs:
  build-aab:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    env:
      ANDROID_SDK_ROOT: ${{ github.workspace }}/android-sdk
      KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
      KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
      KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
      KEY_ALIAS: ${{ secrets.KEY_ALIAS }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"
          cache: gradle

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true

      # --- Install Android SDK manually & accept licenses ---
      - name: Install Android SDK (manual)
        shell: bash
        run: |
          set -euxo pipefail
          mkdir -p "${ANDROID_SDK_ROOT}/cmdline-tools"
          cd "${ANDROID_SDK_ROOT}/cmdline-tools"
          curl -L -o cmdline-tools.zip "https://dl.google.com/android/repository/commandlinetools-linux-12266719_latest.zip"
          mkdir -p latest
          unzip -q cmdline-tools.zip -d latest
          rm cmdline-tools.zip
          echo "SDK manager is at: ${ANDROID_SDK_ROOT}/cmdline-tools/latest/bin/sdkmanager"

      - name: Accept licenses
        shell: bash
        run: |
          set -euxo pipefail
          yes | "${ANDROID_SDK_ROOT}/cmdline-tools/latest/bin/sdkmanager" --sdk_root="${ANDROID_SDK_ROOT}" --licenses || true

      - name: Install required SDK packages
        shell: bash
        run: |
          set -euxo pipefail
          "${ANDROID_SDK_ROOT}/cmdline-tools/latest/bin/sdkmanager" --sdk_root="${ANDROID_SDK_ROOT}" \
            "platform-tools" \
            "platforms;android-35" \
            "build-tools;34.0.0" \
            "cmake;3.22.1" \
            "ndk;27.0.12077973"

      # --- Recreate keystore from secrets ---
      - name: Restore keystore from secrets
        if: env.KEYSTORE_BASE64 != ''
        shell: bash
        run: |
          set -euxo pipefail
          echo "$KEYSTORE_BASE64" | base64 -d > android/app/release-keystore.jks
          ls -l android/app/release-keystore.jks

      # (Optional) sanity check the alias exists
      - name: Show keystore alias (sanity check)
        if: env.KEYSTORE_BASE64 != ''
        shell: bash
        run: |
          set -euxo pipefail
          keytool -list -v -keystore android/app/release-keystore.jks -storepass "$KEYSTORE_PASSWORD" | grep -E "Alias name|Entry type" || true

      # --- Build AAB (release) ---
      - name: Flutter pub get
        run: flutter pub get

      - name: Build AAB
        env:
          ANDROID_SDK_ROOT: ${{ env.ANDROID_SDK_ROOT }}
        run: |
          flutter build appbundle --release --no-tree-shake-icons

      - name: Upload AAB artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release-aab
          path: build/app/outputs/bundle/release/app-release.aab
          if-no-files-found: error
