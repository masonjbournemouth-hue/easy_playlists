name: Android Play Bundle

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - "android/**"
      - "lib/**"
      - "pubspec.yaml"
      - ".github/workflows/android-aab.yml"

jobs:
  build-aab:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    env:
      ANDROID_SDK_ROOT: /home/runner/android-sdk
      ANDROID_HOME: /home/runner/android-sdk
      NDK_VERSION: "27.0.12077973"
      BUILD_TOOLS: "34.0.0"
      PLATFORM_API: "android-34"

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"
          cache: gradle

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.32.x"
          channel: stable
          cache: true

      - name: Install Android cmdline-tools
        shell: bash
        run: |
          set -euxo pipefail
          mkdir -p "$ANDROID_SDK_ROOT/cmdline-tools"
          cd "$ANDROID_SDK_ROOT/cmdline-tools"
          curl -L -o tools.zip "https://dl.google.com/android/repository/commandlinetools-linux-12266719_latest.zip"
          unzip -q tools.zip -d latest
          rm -f tools.zip

      - name: Accept SDK licenses & install packages
        shell: bash
        run: |
          set -euxo pipefail
          # Resolve the actual sdkmanager path regardless of Googleâ€™s zip layout
          if [ -x "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager" ]; then
            SDKMGR="$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager"
          elif [ -x "$ANDROID_SDK_ROOT/cmdline-tools/latest/cmdline-tools/bin/sdkmanager" ]; then
            SDKMGR="$ANDROID_SDK_ROOT/cmdline-tools/latest/cmdline-tools/bin/sdkmanager"
          else
            echo "sdkmanager not found under cmdline-tools/latest"; ls -R "$ANDROID_SDK_ROOT/cmdline-tools" || true
            exit 1
          fi

          yes | "$SDKMGR" --sdk_root="$ANDROID_SDK_ROOT" --licenses

          "$SDKMGR" --sdk_root="$ANDROID_SDK_ROOT" \
            "platform-tools" \
            "platforms;${PLATFORM_API}" \
            "build-tools;${BUILD_TOOLS}" \
            "cmake;3.22.1" \
            "ndk;${NDK_VERSION}"

          "$SDKMGR" --sdk_root="$ANDROID_SDK_ROOT" --list | tail -n +1 || true

      - name: Decode keystore from secret
        shell: bash
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
        run: |
          set -euxo pipefail
          test -n "$KEYSTORE_BASE64"
          mkdir -p android/app
          echo "$KEYSTORE_BASE64" | base64 -d > android/app/release-keystore.jks
          ls -lh android/app/release-keystore.jks

      - name: Write local.properties (sdk.dir + ndk.dir)
        shell: bash
        run: |
          set -euxo pipefail
          {
            echo "sdk.dir=$ANDROID_SDK_ROOT"
            echo "ndk.dir=$ANDROID_SDK_ROOT/ndk/${NDK_VERSION}"
          } > android/local.properties
          cat android/local.properties

      - name: Flutter pub get
        run: flutter pub get

      - name: Flutter doctor
        run: flutter doctor -v

      - name: Build AAB (release)
        shell: bash
        env:
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: |
          set -euxo pipefail
          flutter build appbundle --release --no-shrink --no-tree-shake-icons
          ls -lh build/app/outputs/bundle/release/ || true

      - name: Upload AAB artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: app-release-aab
          path: build/app/outputs/bundle/release/app-release.aab
