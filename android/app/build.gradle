// android/app/build.gradle  (Groovy)
plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'dev.flutter.flutter-gradle-plugin'
}

// --- Read version info from pubspec.yaml (via local.properties) ---
def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withInputStream { stream -> localProperties.load(stream) }
}
def flutterVersionCode = localProperties.getProperty('flutter.versionCode') ?: '1'
def flutterVersionName = localProperties.getProperty('flutter.versionName') ?: '1.0'

android {
    namespace "com.playlistcity.app"
    compileSdk 35

    defaultConfig {
        applicationId "com.playlistcity.app"
        minSdk 21
        targetSdk flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true
    }

    signingConfigs {
        release {
            // CI writes android/key.properties and android/app/upload-keystore.jks
            def props = new Properties()
            def propsFile = rootProject.file("android/key.properties")
            if (!propsFile.exists()) {
                throw new GradleException("android/key.properties not found — signing is required for release.")
            }
            props.load(new FileInputStream(propsFile))

            def storeFileName = (props["storeFile"] ?: "upload-keystore.jks").toString()
            def storePath = file(storeFileName) // resolved relative to android/app
            if (!storePath.exists()) {
                throw new GradleException("Keystore file not found at: " + storePath.absolutePath)
            }

            storeFile storePath
            storePassword props["storePassword"]
            keyAlias props["keyAlias"]
            keyPassword props["keyPassword"]
        }
    }

    buildTypes {
        release {
            // ✅ Always apply signing (fail if misconfigured)
            signingConfig signingConfigs.release
            v1SigningEnabled true
            v2SigningEnabled true

            // Keep CI simple; don’t strip symbols
            minifyEnabled false
            shrinkResources false
            ndk { debugSymbolLevel 'FULL' }
            packagingOptions { doNotStrip "**/*.so" }
        }
        debug { debuggable true }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions { jvmTarget = '11' }

    packagingOptions {
        jniLibs { keepDebugSymbols.add("**/*.so") }
        resources { excludes += ['META-INF/AL2.0', 'META-INF/LGPL2.1'] }
    }
}

dependencies {
    implementation 'androidx.multidex:multidex:2.0.1'
}
